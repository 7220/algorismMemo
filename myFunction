function findMaxDuplicateCount(arr) {
  const count = {};
  let maxCount = 0;

  arr.forEach((item) => {
    if (count[item]) {
      count[item]++;
    } else {
      count[item] = 1;
    }
    if (count[item] > maxCount) {
      maxCount = count[item];
    }
  });

  return maxCount;
}
const arr2 = [1, 2, 3, 2, 2, 4, 5, 5, 5, 5];
const maxDuplicateCount = findMaxDuplicateCount(arr2);
console.log(maxDuplicateCount); // 4


function MostFrequent(arr) {
  // 배열 요소들의 빈도를 저장할 객체 생성
  const freq = {};

  // 배열 요소들의 빈도 계산
  for (let i = 0; i < arr.length; i++) {
    freq[arr[i]] = (freq[arr[i]] || 0) + 1;
  }

  // 빈도가 가장 높은 요소 찾기
  let maxFreq = 0;
  let mostFrequent;

  for (const key in freq) {
    if (freq[key] > maxFreq) {
      maxFreq = freq[key];
      mostFrequent = key;
    }
  }

  return mostFrequent;
}

// 예시
const arr1 = [1, 2, 3, 3, 3, 4, 4, 5, 5];
console.log(findMostFrequent(arr1)); // 3

function near(numlist, n) {
  return numlist.sort((a, b) => {
    const A = Math.abs(n - a)
    const B = Math.abs(n - b)
    if (A !== B) return A - B
    return b - a
    // n에 가까운 값으로 정렬 (같을경우 큰 수가 먼저)
  });
}

function filter1(scores) {
  const score = scores.map(([eng, math]) => eng + math)
  return score.map(s1 => score.filter(s2 => s2 > s1).length + 1)
}

function low(string) {
  let newString = ''
  for (let i = 0; i < string.length; i++) {
      let a = string.charCodeAt(i)
      if(a >= 65 && a <= 90) {
          newString += String.fromCharCode(a + 32)
      } else {
        newString += String.fromCharCode(a)
      }
  }
  return newString
}

function bubble(arr) {
  for (let i = 0; i < arr.length; i++) {
    for (let j = 0; j < arr.length - i - 1; j++) {
      if (arr[j].charCodeAt() > arr[j + 1].charCodeAt()) {
        let a = arr[j]
        arr[j] = arr[j + 1]
        arr[j + 1] = a
      }
    }
  }
  return arr.join('')
}

function sp(string) {
  const list = []
  for (let i = 0; i < string.length; i++) {
    list.push(string[i])
  }
  return list
}

function ascendingComparator(a, b) {
  if (a < b) {
    return -1;
  } else if (a === b) {
    return 0;
  } else {
    return 1;
  }
} 

function sort(arr, comparator) {
  for (let i = 0; i < arr.length; i++) {
    for (let j = i + 1; j < arr.length; j++) {
      if (comparator(arr[j], arr[i]) < 0) {
        const temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
      }
    }
  }
}

const arr = [4, 2, 7, 1, 3];
sort(arr, ascendingComparator);

function customIndexOf(arr, target) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] === target) {
      return i;
    }
  }
  return -1;
}

function solution(numbers, k) {
  let count = 1
  for (let i = 0; ; i += 2) {
    i %= numbers.length
    const a = numbers[i]
    if (count === k) return a
    count++
  }
}
console.log(solution([1,2,3,4], 2))